PATH="${HOME}/bin:${PATH}"

setopt prompt_subst

# Antibody static load of plugins.
source ${HOME}/.zsh_plugins.zsh

# Initial git prompt based on Oh-My-Zsh
GIT_PROMPT_PREFIX="%F{blue}git:(%{$fg[red]%}"
GIT_PROMPT_SUFFIX="%f "
GIT_PROMPT_DIRTY="%F{red}✗%f%F{blue})"
GIT_PROMPT_CLEAN="%F{green}✔%F{blue})"

function git_branch() {
  local ref
  ref=$(command git symbolic-ref HEAD 2> /dev/null) || \
        $(command git rev-parse --short HEAD 2> /dev/null) || \
        $(echo "")
  echo "${ref#refs/heads/}"
}

# Outputs current branch info in prompt format
function git_prompt_info() {
  #local ref='$(git_branch)'
  local ref="$(git_branch)"
  if [[ ${ref} != "" ]]; then
      echo "$GIT_PROMPT_PREFIX${ref}$(parse_git_dirty)$GIT_PROMPT_SUFFIX"
  fi
}

# Checks if working tree is dirty
function parse_git_dirty() {
  local STATUS=''
  local -a FLAGS
  FLAGS=('--porcelain')

  STATUS=$(command git status ${FLAGS} 2> /dev/null | tail -n1)

  if [[ -n $STATUS ]]; then
    echo "$GIT_PROMPT_DIRTY"
  else
    echo "$GIT_PROMPT_CLEAN"
  fi
}

# Get RVM info for prompt.
local rvm_ruby=''
if ${HOME}/.rvm/bin/rvm-prompt &> /dev/null; then # detect user-local rvm installation
  rvm_ruby='%F{red}‹$(${HOME}/.rvm/bin/rvm-prompt i v g s)›%f'
elif which rvm-prompt &> /dev/null; then # detect system-wide rvm installation
  rvm_ruby='%F{red}‹$(rvm-prompt i v g s)›%f'
elif which rbenv &> /dev/null; then # detect Simple Ruby Version Management
  rvm_ruby='%F{red}‹$(rbenv version | sed -e "s/ (set.*$//")›%f'
fi

if [[ $UID -ne 0 ]]; then # normal user
  PR_USER='%F{green}%n%f'
  PR_USER_OP='%F{green}%#%f'
  PR_PROMPT='%f➤ %f'
else # root
  PR_USER='%F{red}%n%f'
  PR_USER_OP='%F{red}%#%f'
  PR_PROMPT='%F{red}➤ %f'
fi

PR_HOST='%F{green}%M%f'

local return_code="%(?..%F{red}%? ↵%f)"

local user_host="${PR_USER}%F{cyan}@${PR_HOST}"
local current_dir="%B%F{blue}%~%f%b"

local git_prompt='$(git_prompt_info)'
#export PS1="╭─${user_host} ${current_dir} ${rvm_ruby} $(git_prompt_info)
export PS1="╭─${user_host} ${current_dir} ${rvm_ruby} ${git_prompt}
╰─$PR_PROMPT "
export RPS1="${return_code}"
